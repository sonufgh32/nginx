name: Deploy ECR Images
on:
  workflow_dispatch:
  
env:
  AWS_REGION: ap-south-1

permissions:
  id-token: write
  contents: read

jobs:
  AssumeRoleAndCallIdentity:
    runs-on: ubuntu-latest
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v3

      - name: Configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          role-to-assume: arn:aws:iam::741448939728:role/GITHUB_OIDC_ROLE
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ env.AWS_REGION }}

      - name: Sts GetCallerIdentity
        run: |
          aws sts get-caller-identity

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, Tag, and Push Docker Image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: my-app-repo  # Change this to your ECR repository name
          IMAGE_TAG: latest
        run: |
          echo $ECR_REGISTRY;
          echo $ECR_REPOSITORY;
          echo $IMAGE_TAG;
          # docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          # docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
      # - name: Print Image URI
      #   run: echo "Pushed Image: ${{ steps.login-ecr.outputs.registry }}/my-app-repo:latest"
